// USE LIBRARY DHT sensor library for ESPx
// USE LIBRARY ThingSpeak
// USE LIBRARY WiFi
// USE LIBRARY LiquidCrystal I2C

#include <WiFi.h>
#include "DHTesp.h"
#include <LiquidCrystal_I2C.h>
#include "ThingSpeak.h"

#define RELAY_PIN 15 // Pin para habilitación de Relay
const int DHT_PIN = 26;
const int LED_PIN = 27;

const char* WIFI_NAME = "Wokwi-GUEST";
const char* WIFI_PASSWORD = "";
const int myChannelNumber = 2458021; // Canal: VAR_FISICAS_MANDRADE_IoT
const char* myApiKey = "BKMCDB2SDQLD6KMF";  // API Key de escritura de wokwi
const char* server = "api.thingspeak.com";

LiquidCrystal_I2C lcd(0x27,16,2);
DHTesp dhtSensor;
WiFiClient client;
bool relayState = false;

void setup() {
  Serial.begin(115200);

  lcd.init();
  lcd.print("UPSE MANDRADE");

  pinMode(RELAY_PIN, OUTPUT); 

  dhtSensor.setup(DHT_PIN, DHTesp::DHT22);

  pinMode(LED_PIN, OUTPUT);

  WiFi.begin(WIFI_NAME, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED){
    delay(1000);
    Serial.println("WiFi no conectado");
  }
  Serial.println("WiFi conectado !");
  Serial.println("Local IP: " + String(WiFi.localIP()));
  WiFi.mode(WIFI_STA);
  ThingSpeak.begin(client);
}

void loop() {
  TempAndHumidity  data = dhtSensor.getTempAndHumidity();
  ThingSpeak.setField(1,data.temperature);
  ThingSpeak.setField(2,data.humidity);
  if (data.temperature > 35  & data.humidity < 40) {
    digitalWrite(LED_PIN, HIGH);
  }else{
    digitalWrite(LED_PIN, LOW);
  }
  
  int x = ThingSpeak.writeFields(myChannelNumber,myApiKey);

  lcd.setCursor(0,1);
  lcd.print("Temp: ");
  lcd.print(data.temperature);

    if (data.temperature >= 35 && !relayState) {
    digitalWrite(RELAY_PIN, HIGH); 
    relayState = true;
  } else if (data.temperature < 35 && relayState) {
    digitalWrite(RELAY_PIN, LOW); 
    relayState = false;
  }
  
  Serial.println("Temp: " + String(data.temperature, 2) + "°C");
  Serial.println("Humidity: " + String(data.humidity, 1) + "%");
  
  if(x == 200){
    Serial.println("Data pushed successfull");
  }else{
    Serial.println("Push error" + String(x));
  }
  Serial.println("---");

  delay(10000);
}
